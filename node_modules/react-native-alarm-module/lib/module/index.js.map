{"version":3,"names":["NativeEventEmitter","NativeModules","Platform","required","LINKING_ERROR","select","ios","default","AlarmModule","Proxy","get","Error","setAlarm","options","taskName","timestamp","type","wakeup","keepAwake","allowedInForeground","extra","toString","cancelAlarm","alarmModuleEmitter","subscribeToOnNewIntent","handler","addListener","NativeModule"],"sources":["index.tsx"],"sourcesContent":["import {NativeEventEmitter, NativeModules, Platform} from 'react-native';\nimport {required} from './utils';\n\nconst LINKING_ERROR =\n  `The package 'react-native-alarm-module' doesn't seem to be linked. Make sure: \\n\\n` +\n  Platform.select({ios: \"- You have run 'pod install'\\n\", default: ''}) +\n  '- You rebuilt the app after installing the package\\n' +\n  '- You are not using Expo managed workflow\\n';\n\nconst AlarmModule = (\n  NativeModules.AlarmModule\n    ? NativeModules.AlarmModule\n    : new Proxy(\n        {},\n        {\n          get() {\n            throw new Error(LINKING_ERROR);\n          },\n        },\n      )\n) as AlarmModuleInterface;\n\ninterface AlarmModuleInterface {\n  setAlarm(\n    taskName: string,\n    timestamp: string,\n    type: string,\n    wakeup: boolean,\n    keepAwake: boolean,\n    allowedInForeground: boolean,\n    extra: string,\n  ): Promise<void>;\n  cancelAlarm(taskName: string, timestamp: string): Promise<void>;\n}\n\nexport type AlarmOptions = {\n  /** Task name that is registered using AppRegistry. */\n  taskName: string;\n  /** the number of milliseconds since the epoch of 1970-01-01T00:00:00Z */\n  timestamp: number;\n  /** **ANDROID:** the type of alarm. Defaults to `'setAlarmClock'`  */\n  type?:\n    | 'setAlarmClock'\n    | 'setExact'\n    | 'setExactAndAllowWhileIdle'\n    | 'setAndAllowWhileIdle';\n  /** **ANDROID:** Should this alarm wake up device ? Uses `RTC_WAKEUP` if true, `RTC` if false */\n  wakeup?: boolean;\n  /** **ANDROID:** should this task acquire wake wock ? */\n  keepAwake?: boolean;\n  /** **ANDROID:** should this task be allowed to run in foreground ? */\n  allowedInForeground?: boolean;\n  /** Extra string to pass to task as `extra` prop. (can be used for passing stringified json) */\n  extra?: string;\n};\n\nexport async function setAlarm(options: AlarmOptions): Promise<void> {\n  if (!options) {\n    throw new Error('AlarmOptions is required.');\n  }\n  required(options, 'taskName');\n  required(options, 'timestamp');\n  const {\n    taskName,\n    timestamp,\n    type = 'setAlarmClock',\n    wakeup = false,\n    keepAwake = false,\n    allowedInForeground = false,\n    extra = '',\n  } = options;\n\n  await AlarmModule.setAlarm(\n    taskName,\n    timestamp.toString(),\n    type,\n    wakeup,\n    keepAwake,\n    allowedInForeground,\n    extra,\n  );\n}\n\nexport async function cancelAlarm(\n  options: Pick<AlarmOptions, 'taskName' | 'timestamp'>,\n): Promise<void> {\n  if (!options) {\n    throw new Error('AlarmOptions is required.');\n  }\n  required(options, 'taskName');\n  required(options, 'timestamp');\n  const {taskName, timestamp} = options;\n  await AlarmModule.cancelAlarm(taskName, timestamp.toString());\n}\n\nexport type TaskArgs = {\n  taskName: string;\n  wakeup: boolean;\n  keepAwake: boolean;\n  fireDate: string;\n  extra: string;\n};\n\nconst alarmModuleEmitter = new NativeEventEmitter(AlarmModule as any);\n\n/**\n * adds the handler to call when user touches alarm clock icon in status bar.\n * **ANDROID only**.\n * Don't forget to call `.remove()` on returned subscription on `componentWillUnmount` or related functions to prevent leak.\n *\n * Calls your handler with intent's arguments\n *  */\nexport function subscribeToOnNewIntent(\n  handler: (intentArgs: Record<string, unknown> | null) => void,\n) {\n  return alarmModuleEmitter.addListener('onNewIntent', handler);\n}\n\nexport default {\n  setAlarm,\n  cancelAlarm,\n  NativeModule: AlarmModule,\n};\n"],"mappings":"AAAA,SAAQA,kBAAR,EAA4BC,aAA5B,EAA2CC,QAA3C,QAA0D,cAA1D;AACA,SAAQC,QAAR,QAAuB,SAAvB;AAEA,MAAMC,aAAa,GAChB,oFAAD,GACAF,QAAQ,CAACG,MAAT,CAAgB;EAACC,GAAG,EAAE,gCAAN;EAAwCC,OAAO,EAAE;AAAjD,CAAhB,CADA,GAEA,sDAFA,GAGA,6CAJF;AAMA,MAAMC,WAAW,GACfP,aAAa,CAACO,WAAd,GACIP,aAAa,CAACO,WADlB,GAEI,IAAIC,KAAJ,CACE,EADF,EAEE;EACEC,GAAG,GAAG;IACJ,MAAM,IAAIC,KAAJ,CAAUP,aAAV,CAAN;EACD;;AAHH,CAFF,CAHN;AA+CA,OAAO,eAAeQ,QAAf,CAAwBC,OAAxB,EAA8D;EACnE,IAAI,CAACA,OAAL,EAAc;IACZ,MAAM,IAAIF,KAAJ,CAAU,2BAAV,CAAN;EACD;;EACDR,QAAQ,CAACU,OAAD,EAAU,UAAV,CAAR;EACAV,QAAQ,CAACU,OAAD,EAAU,WAAV,CAAR;EACA,MAAM;IACJC,QADI;IAEJC,SAFI;IAGJC,IAAI,GAAG,eAHH;IAIJC,MAAM,GAAG,KAJL;IAKJC,SAAS,GAAG,KALR;IAMJC,mBAAmB,GAAG,KANlB;IAOJC,KAAK,GAAG;EAPJ,IAQFP,OARJ;EAUA,MAAML,WAAW,CAACI,QAAZ,CACJE,QADI,EAEJC,SAAS,CAACM,QAAV,EAFI,EAGJL,IAHI,EAIJC,MAJI,EAKJC,SALI,EAMJC,mBANI,EAOJC,KAPI,CAAN;AASD;AAED,OAAO,eAAeE,WAAf,CACLT,OADK,EAEU;EACf,IAAI,CAACA,OAAL,EAAc;IACZ,MAAM,IAAIF,KAAJ,CAAU,2BAAV,CAAN;EACD;;EACDR,QAAQ,CAACU,OAAD,EAAU,UAAV,CAAR;EACAV,QAAQ,CAACU,OAAD,EAAU,WAAV,CAAR;EACA,MAAM;IAACC,QAAD;IAAWC;EAAX,IAAwBF,OAA9B;EACA,MAAML,WAAW,CAACc,WAAZ,CAAwBR,QAAxB,EAAkCC,SAAS,CAACM,QAAV,EAAlC,CAAN;AACD;AAUD,MAAME,kBAAkB,GAAG,IAAIvB,kBAAJ,CAAuBQ,WAAvB,CAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASgB,sBAAT,CACLC,OADK,EAEL;EACA,OAAOF,kBAAkB,CAACG,WAAnB,CAA+B,aAA/B,EAA8CD,OAA9C,CAAP;AACD;AAED,eAAe;EACbb,QADa;EAEbU,WAFa;EAGbK,YAAY,EAAEnB;AAHD,CAAf"}