"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Modal = void 0;
/* eslint-disable @typescript-eslint/no-explicit-any */
var react_1 = __importStar(require("react"));
var react_native_1 = require("react-native");
var Modal_styles_1 = require("./Modal.styles");
var Modal = function (_a) {
    var children = _a.children, onOverlayPress = _a.onOverlayPress, onHide = _a.onHide, _b = _a.isVisible, isVisible = _b === void 0 ? false : _b, _c = _a.animationDuration, animationDuration = _c === void 0 ? 300 : _c, _d = _a.overlayOpacity, overlayOpacity = _d === void 0 ? 0.4 : _d, modalProps = _a.modalProps, contentStyle = _a.contentStyle, overlayStyle = _a.overlayStyle, testID = _a.testID;
    var _e = (0, react_1.useState)(react_native_1.Dimensions.get("window").height), screenHeight = _e[0], setScreenHeight = _e[1];
    var _f = (0, react_1.useState)(react_native_1.Dimensions.get("window").width), screenWidth = _f[0], setScreenWidth = _f[1];
    var isMounted = (0, react_1.useRef)(false);
    var animatedOpacity = (0, react_1.useRef)(new react_native_1.Animated.Value(0));
    var handleDimensionsUpdate = function (dimensionsUpdate) {
        var updatedScreenWidth = dimensionsUpdate.window.width;
        var updateadScreenHeight = dimensionsUpdate.window.height;
        if (updatedScreenWidth !== screenWidth ||
            updateadScreenHeight !== screenHeight) {
            setScreenHeight(updateadScreenHeight);
            setScreenWidth(updatedScreenWidth);
        }
    };
    (0, react_1.useEffect)(function () {
        isMounted.current = true;
        if (isVisible) {
            show();
        }
        var deviceEventEmitter = react_native_1.DeviceEventEmitter.addListener("didUpdateDimensions", handleDimensionsUpdate);
        return function () {
            deviceEventEmitter.remove();
            isMounted.current = false;
        };
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    var backdropAnimatedStyle = {
        opacity: animatedOpacity.current.interpolate({
            inputRange: [0, 1],
            outputRange: [0, overlayOpacity],
        }),
    };
    var contentAnimatedStyle = {
        transform: [
            {
                translateY: animatedOpacity.current.interpolate({
                    inputRange: [0, 1],
                    outputRange: [screenHeight, 0],
                    extrapolate: "clamp",
                }),
            },
        ],
    };
    var show = (0, react_1.useCallback)(function () {
        react_native_1.Animated.timing(animatedOpacity.current, {
            easing: react_native_1.Easing.inOut(react_native_1.Easing.quad),
            // Using native driver in the modal makes the content flash
            useNativeDriver: true,
            duration: animationDuration,
            toValue: 1,
        }).start();
    }, [animationDuration]);
    var hide = (0, react_1.useCallback)(function () {
        react_native_1.Animated.timing(animatedOpacity.current, {
            easing: react_native_1.Easing.inOut(react_native_1.Easing.quad),
            // Using native driver in the modal makes the content flash
            useNativeDriver: true,
            duration: animationDuration,
            toValue: 0,
        }).start(function () {
            if (isMounted.current) {
                onHide === null || onHide === void 0 ? void 0 : onHide();
            }
        });
    }, [animationDuration, onHide]);
    (0, react_1.useEffect)(function () {
        if (isVisible) {
            show();
        }
        else {
            hide();
        }
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [isVisible]);
    return (<react_native_1.Modal transparent animationType="fade" visible={isVisible} {...modalProps} testID={testID !== null && testID !== void 0 ? testID : "modal"}>
            <react_native_1.TouchableWithoutFeedback onPress={onOverlayPress} testID="modal-backdrop">
                <react_native_1.Animated.View style={[
            Modal_styles_1.styles.backdrop,
            backdropAnimatedStyle,
            { width: screenWidth, height: screenHeight },
            overlayStyle,
        ]}/>
            </react_native_1.TouchableWithoutFeedback>
            <react_native_1.Animated.View style={[Modal_styles_1.styles.content, contentAnimatedStyle, contentStyle]} pointerEvents="box-none">
                {children}
            </react_native_1.Animated.View>
        </react_native_1.Modal>);
};
exports.Modal = Modal;
exports.default = react_1.default.memo(exports.Modal);
